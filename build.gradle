plugins {
    id "org.jetbrains.kotlin.jvm" version "1.5.31"
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
    id 'com.gradle.plugin-publish' version '0.20.0'
}

group = 'com.anaplan.engineering'
version = findProperty("version")

ext {
    overtureVersion = "3.0.2"
}

repositories {
    mavenCentral()
}

sourceSets {
    functionalTest {
        kotlin.srcDir 'src/test-fn/kotlin'
        resources.srcDir 'src/test-fn/resources'
    }
}

task functionalTestClasspathJar(type: Jar) {
    inputs.files(sourceSets.test.runtimeClasspath)
        .withPropertyName("runtimeClasspath")
        .withNormalizer(ClasspathNormalizer)
    archiveFileName = "functionalTestClasspath.jar"
    doFirst {
        manifest {
            def classpath = sourceSets.test.runtimeClasspath.files
            attributes "Class-Path": classpath.collect { f -> f.toURI().toString() }.join(" ")
        }
    }
}

configurations {
    functionalTestImplementation.extendsFrom testImplementation
}

dependencies {
    implementation gradleApi()

    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-html-jvm', version: '0.7.3'

    implementation group: 'org.overturetool.core', name: 'interpreter', version: overtureVersion
    implementation group: 'org.overturetool.core.annotations', name: 'provided', version: overtureVersion

    implementation group: 'com.anaplan.engineering', name: 'vdm-pretty-printer', version: overtureVersion

    implementation group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.11.0'
    implementation group: 'com.atlassian.commonmark', name: 'commonmark-ext-gfm-tables', version: '0.9.0'

    implementation group: 'com.xenomachina', name: 'kotlin-argparser', version: '2.0.7'

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.mockito.kotlin', name: 'mockito-kotlin', version: '4.0.0'

    functionalTestImplementation gradleTestKit()
}


task functionalTest(type: Test) {
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    systemProperty "functionalTestClasspathJar", functionalTestClasspathJar.archivePath.absolutePath
    outputs.upToDateWhen { false }
    mustRunAfter test
    dependsOn functionalTestClasspathJar
}

check.dependsOn functionalTest

gradlePlugin {
    plugins {
        vdm {
            id = "${group}.vdm"
            displayName = 'VDM gradle plugin'
            description = 'A Gradle plugin to parse, type-check, test and publish a VDM specification.'
            implementationClass = "com.anaplan.engineering.vdmgradleplugin.VdmGradlePlugin"
        }
    }
}

pluginBundle {
    website = 'https://github.com/anaplan-engineering/vdm-gradle-plugin'
    vcsUrl = 'https://github.com/anaplan-engineering/vdm-gradle-plugin'
    tags = ['VDM']
}


java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username findProperty("ossrhUsername")
                password findProperty("ossrhPassword")
            }
        }
    }
    afterEvaluate {
        publications {
            withType(MavenPublication) {
                groupId = group
                pom {
                    name = 'VDM Gradle plugin'
                    description = 'A Gradle plugin to parse, type-check, test and publish a VDM specification.'
                    url = 'https://github.com/anaplan-engineering/vdm-gradle-plugin'

                    scm {
                        connection = 'scm:git:git://github.com/anaplan-engineering/vdm-gradle-plugin.git'
                        developerConnection = 'scm:git:git@github.com:anaplan-engineering/vdm-gradle-plugin.git'
                        url = 'https://github.com/anaplan-engineering/vdm-gradle-plugin'
                    }

                    licenses {
                        license {
                            name = 'GPL 3.0'
                            url = 'https://github.com/anaplan-engineering/vdm-gradle-plugin/blob/main/LICENSE'
                        }
                    }

                    developers {
                        developer {
                            id = 'sifraser'
                            name = 'Simon Fraser'
                            email = 'simon.fraser@anaplan.com'
                            roles = ['architect', 'principal engineer']
                            url = "https://github.com/sifraser"
                            organization = "Anaplan Ltd"
                            organizationUrl = "http://www.anaplan.com"
                        }
                        developer {
                            id = 'donbex'
                            name = 'Alessandro Pezzoni'
                            email = 'alessandro.pezzoni@anaplan.com'
                            url = "https://github.com/donbex"
                            organization = "Anaplan Ltd"
                            organizationUrl = "http://www.anaplan.com"
                            roles = ['associate engineer']
                        }
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.withType(MavenPublication)
}

